#name: Docker Build and Publish Images
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#  schedule:
#    - cron: '0 0 * * *'

jobs:
  build-ubuntu-22:
    runs-on: ubuntu-22.04
    env:
      IMAGE_TAG: "ubuntu-22"
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3
      - uses: e1himself/goss-installation-action@v1.0.4
        with:
          version: 'v0.3.16'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
# Setup Docker Buildx
#      - name: Set up QEMU
#        id: qemu
#        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os}}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Test Image
        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
# Tag and Push
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in ubuntu latest; do docker tag honestventures/steamcmd-linux-wine:$IMAGE_TAG honestventures/steamcmd-linux-wine:${TAG}; done
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG ubuntu latest; do docker push honestventures/steamcmd-linux-wine:${TAG}; done

  build-ubuntu-20:
    runs-on: ubuntu-20.04
    env:
      IMAGE_TAG: "ubuntu-20"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.4
        with:
          version: 'v0.3.16'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in ubuntu latest; do docker tag honestventures/steamcmd-linux-wine:$IMAGE_TAG honestventures/steamcmd-linux-wine:${TAG}; done
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG ubuntu latest; do docker push honestventures/steamcmd-linux-wine:${TAG}; done

  build-ubuntu-18:
    runs-on: ubuntu-18.04
    env:
      IMAGE_TAG: "ubuntu-18"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.4
        with:
          version: 'v0.3.16'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push honestventures/steamcmd-linux-wine:$IMAGE_TAG

#  build-alpine-3:
#    runs-on: ubuntu-18.04
#    needs: build-ubuntu-18
#    env:
#      IMAGE_TAG: "alpine-3"
#    steps:
#      - uses: actions/checkout@v2
#      - uses: e1himself/goss-installation-action@v1.0.3
#        with:
#          version: 'v0.3.14'
#      - name: Docker Login
#        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: Build Image
#        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
#        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
#      - name: Test Image
#        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
#      # master
#      - name: Tag Image
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: docker tag honestventures/steamcmd-linux-wine:$IMAGE_TAG honestventures/steamcmd-linux-wine:alpine
#      - name: Push Image
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: for TAG in $IMAGE_TAG alpine; do docker push honestventures/steamcmd-linux-wine:${TAG}; done

#  build-centos-8:
#    runs-on: ubuntu-18.04
#    needs: build-ubuntu-18
#    env:
#      IMAGE_TAG: "centos-8"
#    steps:
#      - uses: actions/checkout@v2
#      - uses: e1himself/goss-installation-action@v1.0.3
#        with:
#          version: 'v0.3.14'
#      - name: Docker Login
#        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: Build Image
#        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
#        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
#      - name: Test Image
#        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
#      # master
#      - name: Tag Image
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: docker tag honestventures/steamcmd-linux-wine:$IMAGE_TAG honestventures/steamcmd-linux-wine:centos
#      - name: Push Image
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: for TAG in $IMAGE_TAG centos; do docker push honestventures/steamcmd-linux-wine:${TAG}; done

#  build-centos-7:
#    runs-on: ubuntu-18.04
#    needs: build-ubuntu-18
#    env:
#      IMAGE_TAG: "centos-7"
#    steps:
#      - uses: actions/checkout@v2
#      - uses: e1himself/goss-installation-action@v1.0.3
#        with:
#          version: 'v0.3.14'
#      - name: Docker Login
#        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: Build Image
#        run: docker build -t honestventures/steamcmd-linux-wine:$IMAGE_TAG .
#        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
#      - name: Test Image
#        run: dgoss run honestventures/steamcmd-linux-wine:$IMAGE_TAG --entrypoint=""
#      # master
#      - name: Push Image
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: docker push honestventures/steamcmd-linux-wine:$IMAGE_TAG

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

## Cleanup GitHub Actions
      - name: delete old workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 5
          keep_minimum_runs: 4
